notetoself:
MAKING LAXKIT DEB PACKAGE
-------------------------

(if anyone has a better way of doing this, let me know, I do it rarely)

1.  Create a version branch
    first make sure all the code in docs/examples still work!!
    
    Now branch in github
    
        *****UPDATE!!*** svn copy https://laxkit.svn.sourceforge.net/svnroot/laxkit/laxkit/trunk \
          https://laxkit.svn.sourceforge.net/svnroot/laxkit/laxkit/tags/(whatever version)

2.  modify source
    check out the new branch:
        git clone http://github.com/tomlechner/laxkit-(version).git

    make sure version number is correct in any source files that refer to it, currently:
        configure docs/Doxyfile docs/docs.html docs/faq.html docs/index.html README.md lax/lax-config debian/changelog debian/laxkit.1 debian/liblaxkit-doc.install debian/liblaxkit.install 
 
    make sure configure defaults to 'prefix=/usr/local/'. This is what should be in a source tarball.

        git commit -m 'Last minute touchups to this tag'
        git push origin master

3. Export a copy of the new tag and make a tarball. 

        git clone http://github.com/tomlechner/laxkit-(version).git
        (then remove the .git directory: cd laxkit-(version); rm -rfv .git;
    
        cd laxkit-(version)
        ./configure  <--need to do this so the other preliminary make things are done:
        make depends  in the head directory
        make hidegarbage 
        rm -f config.log Makefile-toinclude lax/version.h lax/configured.h   <--remove cruft from ./configure
        
        cd ..
        tar cjv (the dir) > laxkit-version.tar.bz2 
          this should be the distributed tarball, also
    
   For dev snapshots, the version should be number-rev[SUBVERSION REVISION], so like 0.02-rev234

   unpack and test, preferrably on a different machine in a different directory

5. ---build the package---
    In top laxkit directory, build the laxkit debs with this:
        dpkg-buildpackage -rfakeroot
    
    This often will expose otherwise unknown errors, I think because making the deb packages uses lots more
    compile flags. You can do "fakeroot debian/rules binary" to not have to recompile everything after fixing.
    
    This will currently create debs for:  
      - liblaxkit (includes headers)  
      - liblaxkit-doc  
      - laxinput

6. don't forget to update the website, including uploading a fresh build of the documentation




